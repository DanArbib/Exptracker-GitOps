apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elasticsearch
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  project: default
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: elasticsearch
    targetRevision: 21.1.0
    helm:
      values: |
        master:
          masterOnly: false
          replicaCount: 1
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
            limits:
              cpu: 800m
              memory: 1024Mi
          readinessProbe:
            enabled: false
          livenessProbe:
            enabled: false
          networkPolicy:
            enabled: false
        data:
          replicaCount: 0
        coordinating:
          replicaCount: 0
        ingest:
          replicaCount: 0
        persistence:
          enabled: true
          size: 8Gi
          accessModes:
            - ReadWriteOnce
        ingress:
          enabled: false
        security:
          enabled: true
          existingSecret: "elasticsearch"
          fipsMode: false
          tls:
            autoGenerated: true

        global:
          kibanaEnabled: true

        kibana:
          ingress:
            enabled: false
            hostname: kibana.glivs.com
            ingressClassName: nginx
          elasticsearch:
            security:
              tls:
                existingSecret: elasticsearch-master-crt
                enabled: true
                usePemCerts: true
              auth:
                existingSecret: "elasticsearch"
                enabled: true
                createSystemUser: true
                elasticsearchPasswordSecret: elasticsearch
          livenessProbe:
            enabled: false
          readinessProbe:
            enabled: false
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: logging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - Validate=true
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true

---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluentbit
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  project: default
  source:
    repoURL: https://fluent.github.io/helm-charts
    chart: fluent-bit
    targetRevision: 0.46.7
    helm:
      values: |
        logLevel: info
        flush: 2
        daemonset:
          enabled: true
        config:
          service: |
            [SERVICE]
                Daemon Off
                Flush 1
                Log_Level info
                Parsers_File /fluent-bit/etc/parsers.conf
                Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
                HTTP_Server On
                HTTP_Listen 0.0.0.0
                HTTP_Port {{ .Values.metricsPort }}
                Health_Check On
                Trace_Error On
          inputs: |
            [INPUT]
                Alias glivs
                Name tail
                Path /var/log/containers/*glivs*.log
                multiline.parser docker, cri
                Tag kube.*
                Mem_Buf_Limit 100MB
                Skip_Long_Lines On
            [INPUT]
                Alias kube-proxy
                Name tail
                Path /var/log/containers/*kube-proxy*.log
                multiline.parser docker, cri
                Tag kube.*
                Mem_Buf_Limit 100MB
                Skip_Long_Lines On
            [INPUT]
                Alias ingress-controller
                Name tail
                Path /var/log/containers/*nginx*.log
                multiline.parser docker, cri
                Tag kube.*
                Mem_Buf_Limit 100MB
                Skip_Long_Lines On    
            [INPUT]
                Alias fluent-bit
                Name tail
                Path /var/log/containers/*fluent-bit*.log
                multiline.parser docker, cri
                Tag kube.*
                Mem_Buf_Limit 200MB
                Skip_Long_Lines Off    
            [INPUT]
                Name systemd
                Tag host.*
                Systemd_Filter _SYSTEMD_UNIT=kubelet.service
                Read_From_Tail On
          filters: |
            [FILTER]
                Name kubernetes
                Match kube.*
                Merge_Log On
                Keep_Log Off
                Buffer_Size False
                K8S-Logging.Parser On
          outputs: |
            [OUTPUT]
                Name es
                Match kube.*
                Index fluent-bit
                Type  _doc
                Host elasticsearch
                Port 9200
                HTTP_User elastic
                HTTP_Passwd cmVmdGtuOjAxOjAw
                tls On
                tls.verify Off
                Logstash_Format On
                Logstash_Prefix logstash
                Retry_Limit False
                Suppress_Type_Name On
                Replace_Dots    On
            [OUTPUT]
                Name es
                Match host.*
                Index fluent-bit
                Type  _doc
                Host elasticsearch
                Port 9200
                HTTP_User elastic
                HTTP_Passwd cmVmdGtuOjAxOjAw
                tls On
                tls.verify Off
                Logstash_Format On
                Logstash_Prefix node
                Retry_Limit False
                Suppress_Type_Name On

  destination:
    server: 'https://kubernetes.default.svc'
    namespace: logging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - Validate=true
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true

